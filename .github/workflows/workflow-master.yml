# При push в ветку Master
#- Установить зависимости
#- Прогнать линтер
#- Прогнать тесты с покрытием
#- Загрузить отчет по покрытию как артифакт
#- Собрать проект
#- Загрузить сборку в виде артифакта
#- Сделать релиз
#- Деплойнуть на продакшен
#- Загрузить отчет по покрытию на Codecov
#- Использовать кеш

name: Deploy to Production
on:
  push:
    branches:
      - master
jobs:
  deploy-to-prod:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{secrets.SURGE_LOGIN}}
      SURGE_TOKEN: ${{secrets.SURGE_TOKEN}}
    steps:
      - uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"
      - name: Install Dependencies
        run: npm ci
      - name: Run Linter
        run: npm run format:check
      - name: Run tests and Coverage
        run: npm test -- --coverage
        env:
          CI: true
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: coverage
      - name: Build Project
        run: npm run build
      - name: Upload Build Folder
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
      - name: Zip Assets
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      - name: Create Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{secrets.CUSTOM_TOKEN}}
      - name: Deploy to Staging
        run: npx surge --project ./build --domain decorous-lake.surge.sh
      - name: Upload Coverage Report
        run: npx codecov
        env:
          CODECOVE_TOKEN: ${{secrets.CODECOV_TOKEN}}
